[FILTER]
    Name parser
    Match ${observer_product}.dhcp
    Key_Name log
    Parser bro_dhcp_parser
    Preserve_Key on
    Reserve_Data on

[FILTER]
    Name parser
    Match ${observer_product}.dhcp.json
    Key_Name log
    Parser bro_dhcp_parser_json
    Preserve_Key off
    Reserve_Data on

[FILTER]
    Name modify
    Match ${observer_product}.dhcp
    Add zeek_log_file dhcp
    Add zeek_log_format tab

[FILTER]
    Name modify
    Match ${observer_product}.dhcp.json
    Rename _path zeek_log_file
    Rename _write_ts zeek_write_ts
    Add zeek_log_format json

# ECS: Pre-process DHCP-specific fields
# Note: uids left as is for parsing via lua bro_dhcp_parse_uids function
# Note: msg_type left as is for parsing via lua bro_dhcp_parse_msg_types function
[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Rename client_addr    client_ip
    Rename server_addr    server_ip
    Rename mac            host_mac
    Rename host_name      host_hostname
    Rename client_fqdn    host_name
    Rename domain         host_domain
    Rename requested_addr zeek_dhcp_ip_requested
    Rename assigned_addr  zeek_dhcp_ip_assigned
    Rename lease_time     zeek_dhcp_lease_time
    Rename client_message zeek_dhcp_client_message
    Rename server_message zeek_dhcp_server_message

# Pre-process common BRO fields
[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Add event_dataset ${observer_product}.dhcp
    Rename uid       zeek_uid
    Rename orig_h      source_ip
    Rename orig_p      source_port
    Rename resp_h      destination_ip
    Rename resp_p      destination_port
    Rename proto       network_transport
    Rename duration    event_duration

# Pre-process generic fields
[FILTER]
    Name modify
    Match ${observer_product}.dhcp
    Rename log log_original

# Copies
[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Copy client_ip source_ip
    Copy server_ip destination_ip

# Cleanup - remove keys represending IP addresses if value is "-"
[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals client_ip -
    Remove_regex client_ip

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals server_ip -
    Remove_regex server_ip

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals zeek_dhcp_ip_requested -
    Remove_regex zeek_dhcp_ip_requested

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals zeek_dhcp_ip_assigned -
    Remove_regex zeek_dhcp_ip_assigned

# Cleanup - remove keys represending numbers if value is "-"
[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals zeek_dhcp_lease_time -
    Remove_regex zeek_dhcp_lease_time

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals host_hostname -
    Remove_regex host_hostname

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals host_name -
    Remove_regex host_name

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals host_domain -
    Remove_regex host_domain

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals zeek_dhcp_client_message -
    Remove_regex zeek_dhcp_client_message

[FILTER]
    Name modify
    Match ${observer_product}.dhcp*
    Condition Key_value_equals zeek_dhcp_server_message -
    Remove_regex zeek_dhcp_server_message

# CUSTOM: Parse custom Zeek uids into an array (tab log format only)
[FILTER]
    Name    lua
    Match   ${observer_product}.dhcp
    Script  bro_dhcp_parse.lua
    Call    bro_dhcp_parse_uids

# CUSTOM: Parse custom Zeek DHCP Message Types into an array (tab log format only)
[FILTER]
    Name    lua
    Match   ${observer_product}.dhcp
    Script  bro_dhcp_parse.lua
    Call    bro_dhcp_parse_msg_types

# JSON log format - these are already arrays, just rename
[FILTER]
    Name modify
    Match ${observer_product}.dhcp.json
    Rename uids zeek_dhcp_uids
    Rename msg_types zeek_dhcp_msg_types

# Remove no longer needed keys  (tab log format only)
[FILTER]
    Name modify
    Match ${observer_product}.dhcp
    Remove uids
    Remove msg_types

# CUSTOM: Nest JSON objects to comply with ECS notation: Zeek DHCP - inner layer
[FILTER]
    Name nest
    Match ${observer_product}.dhcp*
    Operation nest
    Wildcard zeek_dhcp_*
    Nest_under dhcp
    Remove_prefix zeek_dhcp_

# CUSTOM: Nest JSON objects to comply with ECS notation: Zeek DHCP - outer layer
[FILTER]
    Name nest
    Match ${observer_product}.dhcp*
    Operation nest
    Wildcard zeek_*
    Wildcard dhcp*
    Nest_under zeek
    Remove_prefix zeek_

